/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch"
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: "sanity.imagePalette"
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions"
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: "sanity.fileAsset"
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: "geopoint"
  lat?: number
  lng?: number
  alt?: number
}

export type Blog = {
  _id: string
  _type: "blog"
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  content?: Array<
    | {
        children?: Array<
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
          | ({
              _key: string
            } & LinkWithIcon)
        >
        style?: "h2" | "h3" | "h4" | "normal" | "blockquote"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
    | ({
        _key: string
      } & LinkWithDescription)
    | {
        asset?: {
          _ref: string
          _type: "reference"
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: "image"
        _key: string
      }
    | ({
        _key: string
      } & Code)
  >
  tags?: Array<string>
}

export type SanityImageCrop = {
  _type: "sanity.imageCrop"
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot"
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: "sanity.imageAsset"
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData"
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata"
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: "slug"
  current?: string
  source?: string
}

export type Works = {
  _id: string
  _type: "works"
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<
    | {
        children?: Array<
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
          | ({
              _key: string
            } & LinkWithIcon)
        >
        style?: "normal" | "h3" | "h4" | "blockquote"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
    | ({
        _key: string
      } & LinkWithDescription)
    | ({
        _key: string
      } & Project)
  >
}

export type Project = {
  _type: "project"
  title?: string
  deployedLink?: string
  githubLink?: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: "span"
      _key: string
    }>
    style?: "normal"
    listItem?: "bullet" | "number"
    markDefs?: Array<{
      href?: string
      _type: "link"
      _key: string
    }>
    level?: number
    _type: "block"
    _key: string
  }>
  isAPI?: boolean
  tags?: Array<string>
}

export type LinkWithIcon = {
  _type: "linkWithIcon"
  title?: string
  icon?: IconPicker
  url?: string
}

export type LinkWithDescription = {
  _type: "linkWithDescription"
  title?: string
  description?: string
  url?: string
}

export type Home = {
  _id: string
  _type: "home"
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<
    | {
        children?: Array<
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
          | ({
              _key: string
            } & LinkWithIcon)
        >
        style?: "normal" | "h3" | "h4" | "blockquote"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
    | ({
        _key: string
      } & LinkWithDescription)
  >
}

export type Code = {
  _type: "code"
  language?: string
  filename?: string
  code?: string
  highlightedLines?: Array<number>
}

export type IconPicker = {
  _type: "iconPicker"
  provider?: string
  name?: string
  svg?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Blog
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
  | Works
  | Project
  | LinkWithIcon
  | LinkWithDescription
  | Home
  | Code
  | IconPicker
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/sanity/lib/queries.ts
// Variable: homeQuery
// Query: *[_type == "home"][0]
export type HomeQueryResult = {
  _id: string
  _type: "home"
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<
    | ({
        _key: string
      } & LinkWithDescription)
    | {
        children?: Array<
          | ({
              _key: string
            } & LinkWithIcon)
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
        >
        style?: "blockquote" | "h3" | "h4" | "normal"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
  >
} | null
// Variable: worksQuery
// Query: *[_type == "works"][0]
export type WorksQueryResult = {
  _id: string
  _type: "works"
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<
    | ({
        _key: string
      } & LinkWithDescription)
    | ({
        _key: string
      } & Project)
    | {
        children?: Array<
          | ({
              _key: string
            } & LinkWithIcon)
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
        >
        style?: "blockquote" | "h3" | "h4" | "normal"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
  >
} | null
// Variable: blogsQuery
// Query: *[_type == "blog"]
export type BlogsQueryResult = Array<{
  _id: string
  _type: "blog"
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  content?: Array<
    | ({
        _key: string
      } & Code)
    | ({
        _key: string
      } & LinkWithDescription)
    | {
        children?: Array<
          | ({
              _key: string
            } & LinkWithIcon)
          | {
              marks?: Array<string>
              text?: string
              _type: "span"
              _key: string
            }
        >
        style?: "blockquote" | "h2" | "h3" | "h4" | "normal"
        listItem?: "bullet" | "number"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: "reference"
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: "image"
        _key: string
      }
  >
  tags?: Array<string>
}>
